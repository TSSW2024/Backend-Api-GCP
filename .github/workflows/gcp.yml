name: Build and Push Go Image to Google Cloud Platform
on:
  push:
    branches: [GCP]

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate with gcloud CLI
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.PROJECT_ID }}

    - name: Build Docker Image
      run: docker build -t ${{ secrets.IMAGE_NAME }}:latest .

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v patch

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker ${{ secrets.REGISTRY_URL }} --quiet

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag ${{ secrets.IMAGE_NAME }}:latest ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/images/${{ secrets.IMAGE_NAME }}:latest
        docker tag ${{ secrets.IMAGE_NAME }}:latest ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/images/${{ secrets.IMAGE_NAME }}:$GIT_TAG
        docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/images/${{ secrets.IMAGE_NAME }}:latest
        docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/images/${{ secrets.IMAGE_NAME }}:$GIT_TAG

    - name: Authenticate Service Account
      run: |-
        echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" | base64 --decode > "${{ runner.temp }}/sa-key.json"
        gcloud auth activate-service-account --key-file="${{ runner.temp }}/sa-key.json"

    - name: Get GKE Credentials
      run: |-
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.PROJECT_ID }}

    - name: Apply Kubernetes Manifests
      run: |-
        kubectl apply -f ./deploy/k8s/
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n ${{ secrets.NAMESPACE }}
        kubectl get services -o wide -n ${{ secrets.NAMESPACE }}
